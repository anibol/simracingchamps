<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="bCargarResource1.Text" xml:space="preserve">
    <value>Load drivers</value>
  </data>
  <data name="bCargarResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="bGuardarResource1.Text" xml:space="preserve">
    <value>Save results</value>
  </data>
  <data name="bGuardarResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="bPublicarResource1.Text" xml:space="preserve">
    <value>Publish results</value>
  </data>
  <data name="bPublicarResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="cbCarreraResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="cbDivisionResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="cbSplitResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblmesgResource1.Text" xml:space="preserve">
    <value />
  </data>
  <data name="lblmesgResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="Literal10Resource1.Text" xml:space="preserve">
    <value>Race Results</value>
  </data>
  <data name="Literal11Resource1.Text" xml:space="preserve">
    <value>Driver</value>
  </data>
  <data name="Literal12Resource1.Text" xml:space="preserve">
    <value>Start Pos.</value>
  </data>
  <data name="Literal13Resource1.Text" xml:space="preserve">
    <value>Finish Pos.</value>
  </data>
  <data name="Literal14Resource1.Text" xml:space="preserve">
    <value>Quick lap</value>
  </data>
  <data name="Literal15Resource1.Text" xml:space="preserve">
    <value>Incidents</value>
  </data>
  <data name="Literal16Resource1.Text" xml:space="preserve">
    <value>Bonification</value>
  </data>
  <data name="Literal17Resource1.Text" xml:space="preserve">
    <value>Points</value>
  </data>
  <data name="Literal18Resource1.Text" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="Literal1Resource1.Text" xml:space="preserve">
    <value>Results management</value>
  </data>
  <data name="Literal2Resource1.Text" xml:space="preserve">
    <value>Select the race to manage and load the participants according to the division / group</value>
  </data>
  <data name="Literal3Resource1.Text" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="Literal4Resource1.Text" xml:space="preserve">
    <value>&lt;p&gt;This is the screen that manages the list of registered pilots &lt;/p&gt;
                        &lt;p&gt; By default all drivers are assigned to the "No Division" division and the "No Group" group. If you are not going to make divisions or groups you can leave them as they are. You do not need to do anything else on this page unless you want to manually add some drivers (they must be registered on the portal first). &lt;br&gt; &lt;/p&gt;
                        &lt;p&gt; Otherwise, to separate the drivers by divisions / groups use the checkbox to select the drivers you want and then in the &lt;b&gt;Registered drivers&lt;/b&gt;
section select the division and / or group and press the button &lt;label class="btn btn-info btn-xs"&gt; Assign &lt;/ label&gt;. The screen will refresh and you will see the pilots assigned to the indicated division / group. &lt;/p&gt;
                        &lt;p&gt; These divisions will be used to set the results. &lt;/p&gt;
                        &lt;p&gt; You have the option of manually adding and deleting drivers by selecting them from the list. Watch out! Erase is not recoverable &lt;/p&gt;</value>
  </data>
  <data name="Literal5Resource1.Text" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Literal6Resource1.Text" xml:space="preserve">
    <value>Select Race</value>
  </data>
  <data name="Literal7Resource1.Text" xml:space="preserve">
    <value>Race</value>
  </data>
  <data name="Literal8Resource1.Text" xml:space="preserve">
    <value>Division</value>
  </data>
  <data name="Literal9Resource1.Text" xml:space="preserve">
    <value>Group</value>
  </data>
  <data name="PageResource1.Title" xml:space="preserve">
    <value>SimRacingChamps</value>
  </data>
  <data name="btnborrar.Text" xml:space="preserve">
    <value>Delete Results</value>
  </data>
  <data name="textoborrado.Text" xml:space="preserve">
    <value>Use this button if you have reorganized divisions/groups and need to reenter the results or if you want to start again</value>
  </data>
  <data name="textoresultados.Text" xml:space="preserve">
    <value>You only have to fill the &lt;b&gt;Finish Pos.&lt;/b&gt; columns with the finish position of the driver in each race&lt;br /&gt;
                            You can use "DNS" for do no start drivers, "RET/DNF" for retired and  "DSQ" for disqualified drivers. &lt;br /&gt;
                            When you save the data the system will calculate automatically the results depending on the point table selected on champ data form.</value>
  </data>
  <data name="manga2.Text" xml:space="preserve">
    <value>Finish Pos. Run 2</value>
  </data>
  <data name="coche.Text" xml:space="preserve">
    <value>Car</value>
  </data>
</root>